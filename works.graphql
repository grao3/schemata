scalar HTML
scalar Date

enum Language{
	ENGLISH
	SPANISH
	FRENCH
    TAGALOG
    "[...]"
}

"""
Consider: Adding Tags, Authors, Editors, Curators, Work types, a related works object? Feedback object?
revise [Tag!] into a paginated connection obj?
"""
interface Work{
	id: ID!
    languages: [Language!]!
    teaser: HTML
    teaserImageSource: String
    published: Date
    updated: Date
    wordCount: Int    
}

"""
A chaptered story-- i.e., a work with subdivisions where the order provides continuity information.
This is maybe also usable for longer series but
then you'll need to figure out how to ensure the order of works
matches the order the author intends. 
"""
type Story implements Work {
    authors: [User!]!
    # One possibility here is to define chapters as some kind of linked list to allow nesting:
    # e.g., universe > series > story > chapter."""
    chapters: [Work!]
    
    #shared Work fields
    id: ID!
    languages: [Language!]!
    teaser: HTML
    teaserImageSource: String
    published: Date
    updated: Date
    wordCount: Int
}

"""
A single story without chapters.
"""
type OneShot implements Work {
    authors: [User!]!
    text: HTML!
    
    #shared Work fields
    id: ID!
    languages: [Language!]!
    teaser: HTML
    teaserImageSource: String
    published: Date
    updated: Date
    wordCount: Int

}

"""
An anthology-- i.e., a work with subdivisions where the order doesn't provide continuity information
"""
type Anthology implements Work {
    editors: [User!]
    chapters: [Work!]
    
    #shared Work fields
    id: ID!
    languages: [Language!]!
    teaser: HTML
    teaserImageSource: String
    published: Date
    updated: Date
    wordCount: Int
}


